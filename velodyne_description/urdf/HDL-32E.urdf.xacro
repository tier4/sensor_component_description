<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="HDL-32E">
  <xacro:macro name="HDL-32E" params="parent name *origin">
    <joint name="${name}_base_mount_joint" type="fixed">
      <xacro:insert_block name="origin" /> 
      <parent link="${parent}"/>
      <child link="${name}_base_link"/>
    </joint>

    <link name="${name}_base_link">
      <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
      </inertial>
      <visual>
        <material name="lightgrey" >
          <color rgba="0.5 0.5 0.5 1"/>
        </material>
        <geometry>
          <mesh filename="package://velodyne_description/meshes/HDL32E_base.stl" />
        </geometry>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0.07212"/>
        <geometry>
          <cylinder radius="0.04267" length="0.14424"/>
        </geometry>
      </collision>
    </link>

    <joint name="${name}_base_scan_joint" type="fixed" >
      <origin xyz="0 0 0.09081" rpy="0 0 0" />
      <parent link="${name}_base_link" />
      <child link="${name}"/>
    </joint>
        
    <link name="${name}">
      <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
      </inertial>
      <visual>
        <material name="lightgrey" >
          <color rgba="0.5 0.5 0.5 1"/>
        </material>
        <origin xyz="0 0 -0.09081" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://velodyne_description/meshes/HDL32E_scan.stl" />
        </geometry>
      </visual>
    </link>

    <!-- Gazebo requires the velodyne_gazebo_plugins package -->
    <gazebo reference="${name}">
      <sensor type="ray" name="${name}-HDL32E">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>2187</samples>
              <resolution>1</resolution>
              <min_angle>-${M_PI}</min_angle>
              <max_angle> ${M_PI}</max_angle>
            </horizontal>
            <vertical>
              <samples>32</samples>
              <resolution>1</resolution>
              <min_angle>-${10.67*M_PI/180.0}</min_angle> <!-- This is backwards to support gazebo 2 -->
              <max_angle> ${30.67*M_PI/180.0}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.055</min>
            <max>140.0</max>
            <resolution>0.001</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.0</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
          <topicName>/${name}/points</topicName>
          <frameName>/${name}</frameName>
          <min_range>0.9</min_range>
          <max_range>130.0</max_range>
          <gaussianNoise>0.008</gaussianNoise>
        </plugin>
      </sensor>
    </gazebo>

    <gazebo reference="${name}_base_link">
      <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="${name}">
      <material>Gazebo/Grey</material>
    </gazebo>

  </xacro:macro>
</robot>
